- name: shipping
  hosts: shipping
  become: yes
  vars:
    mysql_password: RoboShop@1
  tasks:
    - name: install maven
      ansible.builtin.dnf:
        name: maven
        state: present
    
    - name: add roboshop user
      ansible.builtin.user:
        name: roboshop
    
    - name: remove app directory
      ansible.builtin.file:
        path: /app
        state: absent
    
    - name: create app directory
      ansible.builtin.file:
        path: /app
        state: directory
    
    - name: Download package
      ansible.builtin.get_url:
        url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
        dest: /tmp/shipping.zip

    - name: unzip package to app directory
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes
    
    - name: istall package dependencies
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app
    
    - name: rename the file
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app
    
    - name: copy the service file
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/

    - name: daemon_reload
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: install mysql
      ansible.builtin.package:
        name: mysql
        state: present

    - name: check cities schema exists or not
      ansible.builtin.command:  mysql -h mysql.mohankodela.shop -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
      register: schema

    - name: print output
      ansible.builtin.debug:
        msg: "schema output: {{schema}}"


    - name: load schema
      ansible.builtin.shell: |
        "mysql -h mysql.mohankodela.shop -uroot -pRoboShop@1 < /app/db/schema.sql"
        "mysql -h mysql.mohankodela.shop -uroot -pRoboShop@1 < /app/db/app-user.sql"
        "mysql -h mysql.mohankodela.shop -uroot -pRoboShop@1 < /app/db/master-data.sql"
      when: schema.stdout != "1"

    - name: start and enable shipping
      ansible.builtin.service:
        name: shipping
        state: started
        enabled: yes